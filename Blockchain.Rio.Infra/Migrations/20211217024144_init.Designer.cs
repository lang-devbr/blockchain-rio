// <auto-generated />
using System;
using Blockchain.Rio.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blockchain.Rio.Infra.Migrations
{
    [DbContext(typeof(BlockchainContext))]
    [Migration("20211217024144_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("Blockchain.Rio.Domain.AggregateModel.BlockAggregate.Block", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Nounce")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrevHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Block");
                });

            modelBuilder.Entity("Blockchain.Rio.Domain.AggregateModel.BlockAggregate.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BlockId")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnName("From")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnName("To")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnName("Value")
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Blockchain.Rio.Domain.AggregateModel.BlockAggregate.Transaction", b =>
                {
                    b.HasOne("Blockchain.Rio.Domain.AggregateModel.BlockAggregate.Block", "Block")
                        .WithMany("TransactionList")
                        .HasForeignKey("BlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
